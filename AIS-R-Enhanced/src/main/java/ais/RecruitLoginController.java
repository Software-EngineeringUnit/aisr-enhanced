package ais;

import Models.AdminStaff;
import static ais.App.DB_NAME;
import static ais.App.DB_PASSWORD;
import static ais.App.DB_URL;
import static ais.App.DB_USER;
import static ais.App.admins;
import static ais.RecruitVerificationController.recruitIndex;
import java.io.IOException;
import java.sql.*;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;

// Controller class for the Admin Login page
public class RecruitLoginController {

    //Variable to store the index of the admin logging in
    public static int adminIndex = 0;
    //variable for token
    private static String token = "";

    // FXML elements 
    @FXML
    private Label tokenGenerated;
    @FXML
    private TextField adminUserName;
    @FXML
    private TextField recruitUserName;
    @FXML
    private PasswordField recruitPassword;
    @FXML
    private TextField tokenField;

    public static boolean isRecruitLogin = false;

    // Handles the action when the "Admin Login" button is clicked
    @FXML
    private void recruitLoginClicked() throws IOException {
        // Get the entered username and password and token
        String userName = recruitUserName.getText();
        String enteredToken = tokenField.getText();
        String password = recruitPassword.getText();

        // Validate admin login credentials and token entered
        if (validateRecruitLogin(userName, password) && isValidToken(enteredToken)) {
            // Redirect to the UpdateRecruitDetails tab on successful login
            isRecruitLogin = true;
            App.setRoot("UpdateRecruitDetails");
        } else {
            // Display an error message if login fails
            if (!validateRecruitLogin(userName, password)) {
                showAlert("Login Error", "Invalid username or password. Please try again.");
            } else if (!isValidToken(enteredToken)) {
                showAlert("Invalid Token", "You entered an invalid Token. Please try again.");
            }

        }
    }

    // Method to navigate back to the Recruit Page
    public void goBack() throws IOException {
        App.setRoot("RecruitPage");
    }

    // Method to display the token generated by the admin selected
    public void generateTokenClicked() throws IOException {
        String userName = adminUserName.getText();
        if (!validateAdminLogin(userName)) {
            showAlert("Invalid Admin Username", "No such Admin Exists.");
            return;
        }
        AdminStaff admin = admins.get(adminIndex - 1);
        token = admin.generateToken();
        tokenGenerated.setText("Token: " + token);

    }

    // Method to display an alert with the given title and content
    private void showAlert(String title, String content) {
        Alert alert = new Alert(Alert.AlertType.ERROR);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(content);
        alert.showAndWait();
    }

    //method to valid the recruit credentials
    private boolean validateRecruitLogin(String enteredUserName, String enteredPassword) {
        String query = "SELECT Recruit_id FROM recruits WHERE Username = ? AND Password = ?";

        try ( Connection conn = DriverManager.getConnection(DB_URL + DB_NAME, DB_USER, DB_PASSWORD);  PreparedStatement stmt = conn.prepareStatement(query)) {

            stmt.setString(1, enteredUserName);
            stmt.setString(2, enteredPassword);

            try ( ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    recruitIndex = rs.getInt("Recruit_id");

                    return true; // Recruit login successful

                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false; // Recruit login failed

    }

    //method to check if a valid token is entered
    private boolean isValidToken(String enteredToken) {
        if (enteredToken.equals(token)) {
            System.out.println("Token Matched");
            return true;
        }

        System.out.println("Token Not Matched");
        return false;
    }

    // Method to validate admin login credentials
    private boolean validateAdminLogin(String enteredUsername) {
// Query the database to check if the entered username and password are correct
        String query = "SELECT * FROM AdminStaff WHERE Username = ?";

        try ( Connection conn = DriverManager.getConnection(DB_URL + DB_NAME, DB_USER, DB_PASSWORD);  PreparedStatement stmt = conn.prepareStatement(query)) {

            stmt.setString(1, enteredUsername);

            try ( ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    adminIndex = rs.getInt("Admin_id");
                    return true; // Returns true if a matching record is found
                } else {
                    return false; // No matching record found
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            return false;
        }
    }
}
